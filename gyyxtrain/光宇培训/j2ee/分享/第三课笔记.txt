第2接口的笔记里MyBatis的配置有误 按以下内容修改 完成访问数据库的功能
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
 	"http://mybatis.org/dtd/mybatis-3-config.dtd"> 
<configuration>
	<typeAliases>
		<typeAlias alias="UserInfo" type="cn.gyyx.test.sunweisheng.beans.UserInfo" />
	</typeAliases>
	<environments default="JavaTestDB">
		<environment id="JavaTestDB">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
				<property name="url" value="jdbc:sqlserver://192.168.6.129:1433;databaseName=account_db;" />
				<property name="username" value="java" />
				<property name="password" value="java" />
			</dataSource>
		</environment>
	</environments>
	<mappers>
		<mapper resource="MyBatis/User.xml"/>
	</mappers>
</configuration>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="cn.gyyx.test.sunweisheng.dao.User">

  	<select id="selectUserInfoByAccount" parameterType="String" resultMap="UserInfoResultMap">
  		select * from [dbo].[game_person_sws] where account=#{account}
  	</select> 
  	
  	<select id="selectUserInfoByAccounts" resultMap="UserInfoResultMap">
  		select * from [dbo].[game_person_sws] where account in
  		<foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
  			#{item}
  		</foreach>
  	</select>
  	
  	<resultMap type="UserInfo" id="UserInfoResultMap">
  	<id property="code" column="code"/>
  	<result property="account" column="account"/>
  	<result property="password" column="passwd"/>
  	</resultMap>
  </mapper>

/*------------------------------------------------------------------------- 
* 版权所有：北京光宇在线科技有限责任公司 
* 作者：sunweisheng
* 联系方式：sunweisheng@gyyx.cn 
* 创建时间： 2014年10月19日 下午11:32:23
* 版本号：v1.0 
* 本类主要用途描述： 
* xxxxxxxxxxxxxxxxxxxxxx 
-------------------------------------------------------------------------*/ 

package cn.gyyx.test.sunweisheng.dao;

import java.io.IOException;
import java.io.Reader;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

/**
 * 数据库链接工厂
 * @author SunWeiSheng
 *
 */
public class MyBatisConnectionFactory {

private static SqlSessionFactory sqlJavaTestSessionFactory;
	
	static{
		
		try {
			String resource = "MyBatis/config.xml";
			Reader reader = Resources.getResourceAsReader(resource);
			if (sqlJavaTestSessionFactory == null) {
				sqlJavaTestSessionFactory = new SqlSessionFactoryBuilder().build(reader,"JavaTestDB" );
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	/**
	 * 创建JAVA测试数据库链接实例
	 * @return JAVA测试数据库链接实例
	 */
	public static SqlSessionFactory getSqlJavaTestSessionFactory() {
 
        return sqlJavaTestSessionFactory;
    }

}

/*------------------------------------------------------------------------- 
* 版权所有：北京光宇在线科技有限责任公司 
* 作者：sunweisheng
* 联系方式：sunweisheng@gyyx.cn 
* 创建时间： 2014年10月19日 下午11:51:10
* 版本号：v1.0 
* 本类主要用途描述： 
* xxxxxxxxxxxxxxxxxxxxxx 
-------------------------------------------------------------------------*/ 

package cn.gyyx.test.sunweisheng.dao;

import java.util.List;

import cn.gyyx.test.sunweisheng.beans.UserInfo;

/**
 * 用户数据访问接口
 * @author SunWeiSheng
 *
 */
interface User {

	/**
	 * 用账号查询用户数据
	 * @param account 账号
	 * @return 用户数据实体
	 */
	UserInfo selectUserInfoByAccount(String account);
	
	/**
	 * 用一组帐号查询一批帐号数据
	 * @param accounts 一组帐号
	 * @return 用户数据实体集合
	 */
	List<UserInfo> selectUserInfoByAccounts(List<String> accounts);
}

/*------------------------------------------------------------------------- 
* 版权所有：北京光宇在线科技有限责任公司 
* 作者：sunweisheng
* 联系方式：sunweisheng@gyyx.cn 
* 创建时间： 2014年10月19日 下午11:43:22
* 版本号：v1.0 
* 本类主要用途描述： 
* xxxxxxxxxxxxxxxxxxxxxx 
-------------------------------------------------------------------------*/ 

package cn.gyyx.test.sunweisheng.dao;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;

import cn.gyyx.test.sunweisheng.beans.UserInfo;

/**
 * 帐号数据访问DAO
 * @author SunWeiSheng
 *
 */
public class AccountDAO {

	private SqlSessionFactory sqlJavaTestSessionFactory;
	
	public AccountDAO(){
		sqlJavaTestSessionFactory = MyBatisConnectionFactory.getSqlJavaTestSessionFactory();
	}
	
	
	/**
	 * 用账号查询用户数据
	 * @param account 帐号
	 * @return 用户数据实体
	 */
	public UserInfo getUserInfoByAccount(String account){
		SqlSession session = sqlJavaTestSessionFactory.openSession();
		
		try{
			User userMapper = session.getMapper(User.class);
			return userMapper.selectUserInfoByAccount(account);
		}finally{
			session.close();
		}
	}
	
	/**
	 * 用一组帐号查询一批帐号数据
	 * @param accounts 一组帐号
	 * @return 帐号实体集合
	 */
	public List<UserInfo> getUserInfoByAccounts(List<String> accounts){
		SqlSession session = sqlJavaTestSessionFactory.openSession();
		
		try{
			User userMapper = session.getMapper(User.class);
			return userMapper.selectUserInfoByAccounts(accounts);
		}finally{
			session.close();
		}
	}
}
